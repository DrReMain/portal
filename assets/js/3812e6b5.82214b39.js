"use strict";(self.webpackChunkgo_zero=self.webpackChunkgo_zero||[]).push([[4295],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(n),u=l,k=m["".concat(s,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function u(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5820:function(e,t,n){n.r(t),n.d(t,{default:function(){return c},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=["components"],i={},s={unversionedId:"design/grammar",id:"design/grammar",isDocsHomePage:!1,title:"API syntax",description:"API IDL example",source:"@site/docs/design/grammar.md",sourceDirName:"design",slug:"/design/grammar",permalink:"/docs/design/grammar",editUrl:"https://github.com/zeromicro/portal/edit/main/docs/design/grammar.md",version:"current",lastUpdatedAt:1677743481,formattedLastUpdatedAt:"3/2/2023",frontMatter:{},sidebar:"design",previous:{title:"Go-Zero Features",permalink:"/docs/design/go-zero-features"},next:{title:"API directory introduction",permalink:"/docs/design/api-dir"}},p=[{value:"API IDL example",id:"api-idl-example",children:[]},{value:"API syntax structure",id:"api-syntax-structure",children:[{value:"syntax statement",id:"syntax-statement",children:[]}]},{value:"Import syntax block",id:"import-syntax-block",children:[]},{value:"info syntax block",id:"info-syntax-block",children:[]},{value:"type syntax block",id:"type-syntax-block",children:[]},{value:"service syntax block",id:"service-syntax-block",children:[]},{value:"Hidden channel",id:"hidden-channel",children:[{value:"Single line comment",id:"single-line-comment",children:[]},{value:"java style documentation comments",id:"java-style-documentation-comments",children:[]}]},{value:"Doc&amp;Comment",id:"doccomment",children:[]}],d={toc:p};function c(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"api-idl-example"},"API IDL example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'/**\n * api syntax example and syntax description\n */\n\n// api syntax version\nsyntax = "v1"\n\n// import literal\nimport "foo.api"\n\n// import group\nimport (\n    "bar.api"\n    "foo/bar.api"\n)\ninfo(\n    author: "anqiansong"\n    date:   "2020-01-08"\n    desc:   "api syntax example and syntax description"\n)\n\n// type literal\n\ntype Foo{\n    Foo int `json:"foo"`\n}\n\n// type group\n\ntype(\n    Bar{\n        Bar int `json:"bar"`\n    }\n)\n\n// service block\n@server(\n    jwt:   Auth\n    group: foo\n)\nservice foo-api{\n    @doc "foo"\n    @handler foo\n    post /foo (Foo) returns (Bar)\n}\n')),(0,r.kt)("h2",{id:"api-syntax-structure"},"API syntax structure"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"syntax statement"),(0,r.kt)("li",{parentName:"ul"},"import syntax block"),(0,r.kt)("li",{parentName:"ul"},"info syntax block"),(0,r.kt)("li",{parentName:"ul"},"type syntax block"),(0,r.kt)("li",{parentName:"ul"},"service syntax block"),(0,r.kt)("li",{parentName:"ul"},"hidden channel")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"In the above grammatical structure, grammatically speaking, each grammar block can be declared anywhere in the .api file according to the grammatical block.> But in order to improve reading efficiency, we suggest to declare in the above order, because it may be in the future Strict mode is used to control the order of syntax blocks."))),(0,r.kt)("h3",{id:"syntax-statement"},"syntax statement"),(0,r.kt)("p",null,"syntax is a newly added grammatical structure, the introduction of the grammar can solve:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Quickly locate the problematic grammatical structure of the api version"),(0,r.kt)("li",{parentName:"ul"},"Syntax analysis for the version"),(0,r.kt)("li",{parentName:"ul"},"Prevent the big version upgrade of api syntax from causing backward compatibility")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The imported api must be consistent with the syntax version of the main api."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-antlrv4"},"'syntax'={checkVersion(p)}STRING\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description")),(0,r.kt)("p",null,"syntax: Fixed token, marking the beginning of a syntax structure"),(0,r.kt)("p",null,"checkVersion: Custom go method to detect whether ",(0,r.kt)("inlineCode",{parentName:"p"},"STRING")," is a legal version number. The current detection logic is that STRING must meet the regularity of ",(0,r.kt)("inlineCode",{parentName:"p"},'(?m)"v[1-9][0-9]"'),"."),(0,r.kt)("p",null,'STRING: A string of English double quotes, such as "v1"'),(0,r.kt)("p",null,"An api grammar file can only have 0 or 1 syntax statement. If there is no syntax, the default version is ",(0,r.kt)("inlineCode",{parentName:"p"},"v1")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("p",null,"eg1: Irregular writing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'syntax="v1"\n')),(0,r.kt)("p",null,"eg2: Standard writing (recommended)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'syntax = "v2"\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("p",null,"eg1\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'syntax = "v0"\n')),(0,r.kt)("p",null,"eg2\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"syntax = v1\n")),(0,r.kt)("p",null,"eg3\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'syntax = "V1"\n')),(0,r.kt)("h2",{id:"import-syntax-block"},"Import syntax block"),(0,r.kt)("p",null,"As the business scale increases, there are more and more structures and services defined in the api.\nAll the grammatical descriptions are in one api file. This is a problem, and it will greatly increase the difficulty of reading and maintenance.\nImport The grammar block can help us solve this problem. By splitting the api file, different api files are declared according to certain rules,\nwhich can reduce the difficulty of reading and maintenance."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Import here does not include package declarations like golang, it is just the introduction of a file path. After the final analysis, all the declarations will be gathered into a spec.Spec.\nYou cannot import multiple identical paths, otherwise it will cause parsing errors."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-antlrv4"},"'import' {checkImportValue(p)}STRING  \n|'import' '(' ({checkImportValue(p)}STRING)+ ')'\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description")),(0,r.kt)("p",null,"import: fixed token, marking the beginning of an import syntax"),(0,r.kt)("p",null,"checkImportValue: Custom go method to detect whether ",(0,r.kt)("inlineCode",{parentName:"p"},"STRING")," is a legal file path. The current detection logic is that STRING must satisfy ",(0,r.kt)("inlineCode",{parentName:"p"},'(?m)"(?[az AZ 0-9_-])+\\. api"')," regular."),(0,r.kt)("p",null,'STRING: A string of English double quotes, such as "foo.api"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("p",null,"eg\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "foo.api"\nimport "foo/bar.api"\n\nimport(\n    "bar.api"\n    "foo/bar/foo.api"\n)\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("p",null,"eg\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import foo.api\nimport "foo.txt"\nimport (\n    bar.api\n    bar.api\n)\n')),(0,r.kt)("h2",{id:"info-syntax-block"},"info syntax block"),(0,r.kt)("p",null,"The info grammar block is a grammar body that contains multiple key-value pairs.\nIts function is equivalent to the description of an api service. The parser will map it to spec.Spec for translation into other languages \u200b\u200b(golang, java, etc.)\nIs the meta element that needs to be carried. If it is just a description of the current api, without considering its translation to other languages,\nyou can use simple multi-line comments or java-style documentation comments. For comment descriptions, please refer to the hidden channels below."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Duplicate keys cannot be used, each api file can only have 0 or 1 info syntax block"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-antlrv4"},"'info' '(' (ID {checkKeyValue(p)}VALUE)+ ')'\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description")),(0,r.kt)("p",null,"info: fixed token, marking the beginning of an info syntax block"),(0,r.kt)("p",null,"checkKeyValue: Custom go method to check whether ",(0,r.kt)("inlineCode",{parentName:"p"},"VALUE")," is a legal value."),(0,r.kt)("p",null,"VALUE: The value corresponding to the key, which can be any character after a single line except'\\r','\\n',''. For multiple lines, please wrap it with \"\", but it is strongly recommended that everything be wrapped with \"\""),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("p",null,"eg1\uff1aIrregular writing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'info(\nfoo: foo value\nbar:"bar value"\n    desc:"long long long long\nlong long text"\n)\n')),(0,r.kt)("p",null,"eg2\uff1aStandard writing (recommended)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'info(\n    foo: "foo value"\n    bar: "bar value"\n    desc: "long long long long long long text"\n)\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("p",null,"eg1\uff1aNo key-value"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"info()\n")),(0,r.kt)("p",null,"eg2\uff1aDoes not contain colon"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"info(\n    foo value\n)\n")),(0,r.kt)("p",null,"eg3\uff1akey-value does not wrap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'info(foo:"value")\n')),(0,r.kt)("p",null,"eg4\uff1aNo key"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'info(\n    : "value"\n)\n')),(0,r.kt)("p",null,"eg5\uff1aIllegal key"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'info(\n    12: "value"\n)\n')),(0,r.kt)("p",null,"eg6\uff1aRemove the old version of multi-line syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"info(\n    foo: >\n    some text\n    <\n)\n")),(0,r.kt)("h2",{id:"type-syntax-block"},"type syntax block"),(0,r.kt)("p",null,"In the api service, we need to use a structure (class) as the carrier of the request body and the response body.\nTherefore, we need to declare some structures to accomplish this. The type syntax block evolved from the type of golang.\nOf course It also retains some of the characteristics of golang type, and the following golang characteristics are used:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Keep the built-in data types of golang ",(0,r.kt)("inlineCode",{parentName:"li"},"bool"),",",(0,r.kt)("inlineCode",{parentName:"li"},"int"),",",(0,r.kt)("inlineCode",{parentName:"li"},"int8"),",",(0,r.kt)("inlineCode",{parentName:"li"},"int16"),",",(0,r.kt)("inlineCode",{parentName:"li"},"int32"),",",(0,r.kt)("inlineCode",{parentName:"li"},"int64"),",",(0,r.kt)("inlineCode",{parentName:"li"},"uint"),",",(0,r.kt)("inlineCode",{parentName:"li"},"uint8"),",",(0,r.kt)("inlineCode",{parentName:"li"},"uint16"),",",(0,r.kt)("inlineCode",{parentName:"li"},"uint32"),",",(0,r.kt)("inlineCode",{parentName:"li"},"uint64"),",",(0,r.kt)("inlineCode",{parentName:"li"},"uintptr"),"\n,",(0,r.kt)("inlineCode",{parentName:"li"},"float32"),",",(0,r.kt)("inlineCode",{parentName:"li"},"float64"),",",(0,r.kt)("inlineCode",{parentName:"li"},"complex64"),",",(0,r.kt)("inlineCode",{parentName:"li"},"complex128"),",",(0,r.kt)("inlineCode",{parentName:"li"},"string"),",",(0,r.kt)("inlineCode",{parentName:"li"},"byte"),",",(0,r.kt)("inlineCode",{parentName:"li"},"rune"),","),(0,r.kt)("li",{parentName:"ul"},"Compatible with golang struct style declaration"),(0,r.kt)("li",{parentName:"ul"},"Keep golang keywords")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"Does not support alias"),(0,r.kt)("li",{parentName:"ul"},"Does not support ",(0,r.kt)("inlineCode",{parentName:"li"},"time.Time")," type, because client code is generated from API file, and not all client languages support ",(0,r.kt)("inlineCode",{parentName:"li"},"time.Time")," related types"),(0,r.kt)("li",{parentName:"ul"},"Structure name, field name, cannot be a golang keyword")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("p",null,"Since it is similar to golang, it will not be explained in detail. Please refer to the typeSpec definition in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/zeromicro/go-zero/blob/master/tools/goctl/api/parser/g4/ApiParser.g4"},"ApiParser.g4")," for the specific syntax definition."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description")),(0,r.kt)("p",null,"Refer to golang writing"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("p",null,"eg1\uff1aIrregular writing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'type Foo struct{\n    Id int `path:"id"` // \u2460\n    Foo int `json:"foo"`\n}\n\ntype Bar struct{\n    // Non-exported field\n    bar int `form:"bar"`\n}\n\ntype(\n    // Non-derived structure\n    fooBar struct{\n        FooBar int\n    }\n)\n')),(0,r.kt)("p",null,"eg2: Standard writing (recommended)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'type Foo{\n    Id int `path:"id"`\n    Foo int `json:"foo"`\n}\n\ntype Bar{\n    Bar int `form:"bar"`\n}\n\ntype(\n    FooBar{\n        FooBar int\n    }\n)\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("p",null,"eg"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type Gender int // not support\n\n// Non-struct token\ntype Foo structure{ \n  CreateTime time.Time // Does not support time.Time\n}\n\n// golang keyword var\ntype var{} \n\ntype Foo{\n  // golang keyword interface\n  Foo interface \n}\n\n\ntype Foo{\n  foo int \n  // The map key must have the built-in data type of golang\n  m map[Bar]string\n}\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"\u2460")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The tag definition is the same as the json tag syntax in golang. In addition to the json tag, go-zero also provides some other tags to describe the fields,\nSee the table below for details."))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tag table"),(0,r.kt)("p",{parentName:"li"},"When binding parameters, only one of the following four tags can be selected"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tag key")," ",(0,r.kt)("td",null,"Description")," ",(0,r.kt)("td",null,"Provider"),(0,r.kt)("td",null,"Effective Coverage")," ",(0,r.kt)("td",null,"Example")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"json")," ",(0,r.kt)("td",null,"Json serialization tag")," ",(0,r.kt)("td",null,"golang")," ",(0,r.kt)("td",null,"request\u3001response")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'json:"fooo"'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"path")," ",(0,r.kt)("td",null,"Routing path, such as",(0,r.kt)("code",null,"/foo/:id"))," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'path:"id"'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"form")," ",(0,r.kt)("td",null,"Mark that the request body is a form (in the POST method) or a query (in the GET method)",(0,r.kt)("code",null,"/search?name=keyword"),")")," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'form:"name"'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"header")," ",(0,r.kt)("td",null,"Parse values from HTTP headers, like ",(0,r.kt)("code",null,"Name: value"))," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'header:"name"'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tag modifier"),(0,r.kt)("p",{parentName:"li"},"Common parameter verification description"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"tag key ")," ",(0,r.kt)("td",null,"Description ")," ",(0,r.kt)("td",null,"Provider ")," ",(0,r.kt)("td",null,"Effective Coverage ")," ",(0,r.kt)("td",null,"Example ")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"optional")," ",(0,r.kt)("td",null,"Define the current field as an optional parameter")," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'json:"name,optional"'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"options")," ",(0,r.kt)("td",null,"Define the enumeration value of the current field, separated by a vertical bar ",(0,r.kt)("code",null,"|"))," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'json:"gender,options=male"'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"default")," ",(0,r.kt)("td",null,"Define the default value of the current field")," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'json:"gender,default=male"'))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"range")," ",(0,r.kt)("td",null,"Define the value range of the current field")," ",(0,r.kt)("td",null,"go-zero")," ",(0,r.kt)("td",null,"request")," ",(0,r.kt)("td",null,(0,r.kt)("code",null,'json:"age,range=[0:120]"')))),(0,r.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The tag modifier needs to be separated by a quotation comma after the tag value"))))),(0,r.kt)("h2",{id:"service-syntax-block"},"service syntax block"),(0,r.kt)("p",null,"The service syntax block is used to define api services, including service name, service metadata, middleware declaration, routing, handler, etc."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"The service name of the main api and the imported api must be the same, and there must be no ambiguity in the service name."),(0,r.kt)("li",{parentName:"ul"},"The handler name cannot be repeated"),(0,r.kt)("li",{parentName:"ul"},"The name of the route (request method + request path) cannot be repeated"),(0,r.kt)("li",{parentName:"ul"},"The request body must be declared as a normal (non-pointer) struct, and the response body has been processed for forward compatibility. Please refer to the following description for details")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-antlrv4"},"serviceSpec:    atServer? serviceApi;\natServer:       '@server' lp='(' kvLit+ rp=')';\nserviceApi:     {match(p,\"service\")}serviceToken=ID serviceName lbrace='{' serviceRoute* rbrace='}';\nserviceRoute:   atDoc? (atServer|atHandler) route;\natDoc:          '@doc' lp='('? ((kvLit+)|STRING) rp=')'?;\natHandler:      '@handler' ID;\nroute:          {checkHttpMethod(p)}httpMethod=ID path request=body? returnToken=ID? response=replybody?;\nbody:           lp='(' (ID)? rp=')';\nreplybody:      lp='(' dataType? rp=')';\n// kv\nkvLit:          key=ID {checkKeyValue(p)}value=LINE_VALUE;\n\nserviceName:    (ID '-'?)+;\npath:           (('/' (ID ('-' ID)*))|('/:' (ID ('-' ID)?)))+;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description")),(0,r.kt)("p",null,"serviceSpec: Contains an optional syntax block ",(0,r.kt)("inlineCode",{parentName:"p"},"atServer")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"serviceApi")," syntax block, which follow the sequence mode (the service must be written in order, otherwise it will be parsed incorrectly)"),(0,r.kt)("p",null,"atServer: Optional syntax block, defining server metadata of the key-value structure,'@server' indicates the beginning of this server syntax block, which can be used to describe serviceApi or route syntax block, and it has some special keys when it is used to describe different syntax blocks key needs attention\uff0csee ",(0,r.kt)("strong",{parentName:"p"},"atServerKey Key Description"),"\u3002"),(0,r.kt)("p",null,"serviceApi: Contains one or more ",(0,r.kt)("inlineCode",{parentName:"p"},"serviceRoute")," syntax blocks"),(0,r.kt)("p",null,"serviceRoute: Contains ",(0,r.kt)("inlineCode",{parentName:"p"},"atDoc"),", handler and ",(0,r.kt)("inlineCode",{parentName:"p"},"route")," in sequence mode"),(0,r.kt)("p",null,"atDoc: Optional syntax block, a key-value description of a route, which will be passed to the spec.Spec structure after parsing. If you don't care about passing it to spec.Spec, it is recommended to use a single-line comment instead."),(0,r.kt)("p",null,"handler: It is a description of the handler layer of routing. You can specify the handler name by specifying the ",(0,r.kt)("inlineCode",{parentName:"p"},"handler")," key by atServer, or you can directly use the atHandler syntax block to define the handler name"),(0,r.kt)("p",null,"atHandler: ",(0,r.kt)("inlineCode",{parentName:"p"},"@handler")," fixed token, followed by a value following the regularity ",(0,r.kt)("inlineCode",{parentName:"p"},"[_a-zA-Z][a-zA-Z_-]"),", used to declare a handler name"),(0,r.kt)("p",null,"route: Routing consists of ",(0,r.kt)("inlineCode",{parentName:"p"},"httpMethod"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"path"),", optional ",(0,r.kt)("inlineCode",{parentName:"p"},"request"),", optional ",(0,r.kt)("inlineCode",{parentName:"p"},"response"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"httpMethod")," must be lowercase."),(0,r.kt)("p",null,"body: api request body grammar definition, it must be an optional ID value wrapped by ()"),(0,r.kt)("p",null,"replyBody: api response body grammar definition, must be a struct wrapped by ()\u3001",(0,r.kt)("del",{parentName:"p"},"array(Forward compatible processing, it may be discarded in the future, it is strongly recommended to wrap it in struct instead of using array directly as the response body)")),(0,r.kt)("p",null,"kvLit: Same as info key-value"),(0,r.kt)("p",null,"serviceName: There can be multiple'-'join ID values"),(0,r.kt)("p",null,"path: The api request path must start with ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"/:"),", and must not end with ",(0,r.kt)("inlineCode",{parentName:"p"},"/"),". The middle can contain ID or multiple ID strings with ",(0,r.kt)("inlineCode",{parentName:"p"},"-")," join"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"atServerKey Key Description")),(0,r.kt)("p",null,"When modifying the service"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"key"),(0,r.kt)("td",null,"Description"),(0,r.kt)("td",null,"Example")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"jwt"),(0,r.kt)("td",null,"Declare that all routes under the current service require jwt authentication, and code containing jwt logic will be automatically generated"),(0,r.kt)("td",null,(0,r.kt)("code",null,"jwt: Auth"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"group"),(0,r.kt)("td",null,"Declare the current service or routing file group"),(0,r.kt)("td",null,(0,r.kt)("code",null,"group: login"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"middleware"),(0,r.kt)("td",null,"Declare that the current service needs to open the middleware"),(0,r.kt)("td",null,(0,r.kt)("code",null,"middleware: AuthMiddleware"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"prefix"),(0,r.kt)("td",null,"Declare a route prefix"),(0,r.kt)("td",null,(0,r.kt)("code",null,"prefix: /api")))),(0,r.kt)("p",null,"When modifying the route"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"key"),(0,r.kt)("td",null,"Description"),(0,r.kt)("td",null,"Example")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"handler"),(0,r.kt)("td",null,"Declare a handler"),(0,r.kt)("td",null,"-"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("p",null,"eg1\uff1aIrregular writing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"@server(\n  jwt: Auth\n  group: foo\n  middleware: AuthMiddleware\n  prefix: /api\n)\nservice foo-api{\n  @doc(\n    summary: foo\n  )\n  @server(\n    handler: foo\n  )\n  // Non-exported body\n  post /foo/:id (foo) returns (bar)\n  \n  @doc \"bar\"\n  @handler bar\n  post /bar returns ([]int)// Array is not recommended as response body\n  \n  @handler fooBar\n  post /foo/bar (Foo) returns // You can omit 'returns'\n}\n")),(0,r.kt)("p",null,"eg2\uff1aStandard writing (recommended)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'@server(\n  jwt: Auth\n  group: foo\n  middleware: AuthMiddleware\n  prefix: /api\n)\nservice foo-api{\n  @doc "foo"\n  @handler foo\n  post /foo/:id (Foo) returns (Bar)\n}\n\nservice foo-api{\n  @handler ping\n  get /ping\n  \n  @doc "foo"\n  @handler bar\n  post /bar/:id (Foo)\n}\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// Empty server syntax block is not supported\n@server(\n)\n// Empty service syntax block is not supported\nservice foo-api{\n}\n\nservice foo-api{\n  @doc kkkk // The short version of the doc must be enclosed in English double quotation marks\n  @handler foo\n  post /foo\n  \n  @handler foo // Duplicate handler\n  post /bar\n  \n  @handler fooBar\n  post /bar // Duplicate routing\n  \n  // @handler and @doc are in the wrong order\n  @handler someHandler\n  @doc "some doc"\n  post /some/path\n  \n  // handler is missing\n  post /some/path/:id\n  \n  @handler reqTest\n  post /foo/req (*Foo) // Data types other than ordinary structures are not supported as the request body\n  \n  @handler replyTest\n  post /foo/reply returns (*Foo) // Does not support data types other than ordinary structures and arrays (forward compatibility, later considered to be discarded) as response bodies\n}\n')),(0,r.kt)("h2",{id:"hidden-channel"},"Hidden channel"),(0,r.kt)("p",null,"Hidden channels are currently mainly blank symbols, newline symbols and comments. Here we only talk about comments, because blank symbols and newline symbols are currently useless."),(0,r.kt)("h3",{id:"single-line-comment"},"Single line comment"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-antlrv4"},"'//' ~[\\r\\n]*\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description"),"\nIt can be known from the grammatical definition that single-line comments must start with ",(0,r.kt)("inlineCode",{parentName:"p"},"//"),", and the content cannot contain newline characters"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// doc\n// comment\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// break\nline comments\n")),(0,r.kt)("h3",{id:"java-style-documentation-comments"},"java style documentation comments"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar definition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-antlrv4"},"'/*' .*? '*/'\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grammar description")),(0,r.kt)("p",null,"It can be known from the grammar definition that a single line comment must start with any character that starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"/*")," and ends with ",(0,r.kt)("inlineCode",{parentName:"p"},"*/"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of correct syntax")," \u2705"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"/**\n * java-style doc\n */\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples of incorrect syntax")," \u274c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"/*\n * java-style doc */\n */\n")),(0,r.kt)("h2",{id:"doccomment"},"Doc&Comment"),(0,r.kt)("p",null,"If you want to get the doc or comment of a certain element, how do you define it?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Doc")),(0,r.kt)("p",null,"We stipulate that the number of lines in the previous grammar block (non-hidden channel content)\nline+1 to all comments (the current line, or multiple lines) before the first element of the current grammar block are doc\uff0c\nAnd retain the original mark of ",(0,r.kt)("inlineCode",{parentName:"p"},"//"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/*"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"*/"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Comment")),(0,r.kt)("p",null,"We specify that a comment block (the current line, or multiple lines) at the beginning of the line where the last element of the current syntax block is located is comment,\nAnd retain the original mark of ",(0,r.kt)("inlineCode",{parentName:"p"},"//"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/*"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"*/"),"."),(0,r.kt)("p",null,"Syntax block ",(0,r.kt)("strong",{parentName:"p"},"Doc")," and ",(0,r.kt)("strong",{parentName:"p"},"Comment")," support situation"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"Syntax block"),(0,r.kt)("td",null,"Parent Syntax Block"),(0,r.kt)("td",null,"Doc"),(0,r.kt)("td",null,"Comment")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"syntaxLit"),(0,r.kt)("td",null,"api"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"kvLit"),(0,r.kt)("td",null,"infoSpec"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"importLit"),(0,r.kt)("td",null,"importSpec"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"typeLit"),(0,r.kt)("td",null,"api"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u274c")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"typeLit"),(0,r.kt)("td",null,"typeBlock"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u274c")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"field"),(0,r.kt)("td",null,"typeLit"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"key-value"),(0,r.kt)("td",null,"atServer"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"atHandler"),(0,r.kt)("td",null,"serviceRoute"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"route"),(0,r.kt)("td",null,"serviceRoute"),(0,r.kt)("td",null,"\u2705"),(0,r.kt)("td",null,"\u2705"))),(0,r.kt)("p",null,"The following is the writing of doc and comment after the corresponding syntax block is parsed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// syntaxLit doc\nsyntax = "v1" // syntaxLit commnet\n\ninfo(\n  // kvLit doc\n  author: songmeizi // kvLit comment\n)\n\n// typeLit doc\ntype Foo {}\n\ntype(\n  // typeLit doc\n  Bar{}\n  \n  FooBar{\n    // filed doc\n    Name int // filed comment\n  }\n)\n\n@server(\n  /**\n   * kvLit doc\n   * Enable jwt authentication\n   */\n  jwt: Auth /**kvLit comment*/\n)\nservice foo-api{\n  // atHandler doc\n  @handler foo //atHandler comment\n  \n  /*\n   * Route doc\n   * Post request\n   * Route path: foo\n   * Request body: Foo\n   * Response body: Foo\n   */\n  post /foo (Foo) returns (Foo) // route comment\n}\n')))}c.isMDXComponent=!0}}]);