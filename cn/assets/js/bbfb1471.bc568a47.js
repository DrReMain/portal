"use strict";(self.webpackChunkgo_zero=self.webpackChunkgo_zero||[]).push([[7441],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),d=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(n),p=a,g=c["".concat(m,".").concat(p)]||c[p]||s[p]||l;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1078:function(e,t,n){n.r(t),n.d(t,{default:function(){return s},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return d}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={},m={unversionedId:"goctl/model",id:"goctl/model",isDocsHomePage:!1,title:"model \u6307\u4ee4",description:"goctl model \u4e3ago-zero\u4e0b\u7684\u5de5\u5177\u6a21\u5757\u4e2d\u7684\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u76ee\u524d\u652f\u6301\u8bc6\u522bmysql ddl\u8fdb\u884cmodel\u5c42\u4ee3\u7801\u751f\u6210\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u6216\u8005idea\u63d2\u4ef6\uff08\u5373\u5c06\u652f\u6301\uff09\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u751f\u6210\u5e26redis cache\u6216\u8005\u4e0d\u5e26redis cache\u7684\u4ee3\u7801\u903b\u8f91\u3002",source:"@site/i18n/cn/docusaurus-plugin-content-docs/current/goctl/model.md",sourceDirName:"goctl",slug:"/goctl/model",permalink:"/cn/docs/goctl/model",editUrl:"https://github.com/zeromicro/portal/edit/main/i18n/cn/docusaurus-plugin-content-docs/current/goctl/model.md",version:"current",lastUpdatedAt:1677211393,formattedLastUpdatedAt:"2/24/2023",frontMatter:{},sidebar:"goctl",previous:{title:"rpc \u6307\u4ee4",permalink:"/cn/docs/goctl/zrpc"},next:{title:"plugin \u6307\u4ee4",permalink:"/cn/docs/goctl/plugin"}},d=[{value:"\u5feb\u901f\u5f00\u59cb",id:"\u5feb\u901f\u5f00\u59cb",children:[]},{value:"\u7528\u6cd5",id:"\u7528\u6cd5",children:[]},{value:"\u751f\u6210\u89c4\u5219",id:"\u751f\u6210\u89c4\u5219",children:[]},{value:"\u7f13\u5b58",id:"\u7f13\u5b58",children:[]}],u={toc:d};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"goctl model \u4e3ago-zero\u4e0b\u7684\u5de5\u5177\u6a21\u5757\u4e2d\u7684\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u76ee\u524d\u652f\u6301\u8bc6\u522bmysql ddl\u8fdb\u884cmodel\u5c42\u4ee3\u7801\u751f\u6210\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u6216\u8005idea\u63d2\u4ef6\uff08\u5373\u5c06\u652f\u6301\uff09\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u751f\u6210\u5e26redis cache\u6216\u8005\u4e0d\u5e26redis cache\u7684\u4ee3\u7801\u903b\u8f91\u3002"),(0,l.kt)("h2",{id:"\u5feb\u901f\u5f00\u59cb"},"\u5feb\u901f\u5f00\u59cb"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u901a\u8fc7ddl\u751f\u6210"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ goctl model mysql ddl -src="./*.sql" -dir="./sql/model" -c\n')),(0,l.kt)("p",{parentName:"li"},"\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\u5373\u53ef\u5feb\u901f\u751f\u6210CURD\u4ee3\u7801\u3002"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-text"},"model\n\u251c\u2500\u2500 usermodel.go\n\u251c\u2500\u2500 usermodel_gen.go\n\u2514\u2500\u2500 vars.go\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u901a\u8fc7datasource\u751f\u6210"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ goctl model mysql datasource -url="user:password@tcp(127.0.0.1:3306)/database" -table="*"  -dir="./model"\n')))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"usermodel_gen.go")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'// Code generated by goctl. DO NOT EDIT!\n\npackage model\n\nimport (\n    "context"\n    "database/sql"\n    "fmt"\n    "strings"\n    "time"\n\n    "github.com/zeromicro/go-zero/core/stores/builder"\n    "github.com/zeromicro/go-zero/core/stores/cache"\n    "github.com/zeromicro/go-zero/core/stores/sqlc"\n    "github.com/zeromicro/go-zero/core/stores/sqlx"\n    "github.com/zeromicro/go-zero/core/stringx"\n)\n\nvar (\n    userFieldNames          = builder.RawFieldNames(&User{})\n    userRows                = strings.Join(userFieldNames, ",")\n    userRowsExpectAutoSet   = strings.Join(stringx.Remove(userFieldNames, "`id`", "`create_time`", "`update_time`"), ",")\n    userRowsWithPlaceHolder = strings.Join(stringx.Remove(userFieldNames, "`id`", "`create_time`", "`update_time`"), "=?,") + "=?"\n\n    cacheUserIdPrefix     = "cache:user:id:"\n    cacheUserNumberPrefix = "cache:user:number:"\n)\n\ntype (\n    userModel interface {\n        Insert(ctx context.Context, data *User) (sql.Result, error)\n        FindOne(ctx context.Context, id int64) (*User, error)\n        FindOneByNumber(ctx context.Context, number string) (*User, error)\n        Update(ctx context.Context, data *User) error\n        Delete(ctx context.Context, id int64) error\n    }\n\n    defaultUserModel struct {\n        sqlc.CachedConn\n        table string\n    }\n\n    User struct {\n        Id         int64     `db:"id"`\n        Number     string    `db:"number"`\n        Name       string    `db:"name"`\n        Password   string    `db:"password"`\n        Gender     string    `db:"gender"`\n        CreateTime time.Time `db:"create_time"`\n        UpdateTime time.Time `db:"update_time"`\n    }\n)\n\nfunc newUserModel(conn sqlx.SqlConn, c cache.CacheConf) *defaultUserModel {\n    return &defaultUserModel{\n        CachedConn: sqlc.NewConn(conn, c),\n        table:      "`user`",\n    }\n}\n\nfunc (m *defaultUserModel) Insert(ctx context.Context, data *User) (sql.Result, error) {\n    userIdKey := fmt.Sprintf("%s%v", cacheUserIdPrefix, data.Id)\n    userNumberKey := fmt.Sprintf("%s%v", cacheUserNumberPrefix, data.Number)\n    ret, err := m.ExecCtx(ctx, func(ctx context.Context, conn sqlx.SqlConn) (result sql.Result, err error) {\n        query := fmt.Sprintf("insert into %s (%s) values (?, ?, ?, ?)", m.table, userRowsExpectAutoSet)\n        return conn.ExecCtx(ctx, query, data.Number, data.Name, data.Password, data.Gender)\n    }, userIdKey, userNumberKey)\n    return ret, err\n}\n\nfunc (m *defaultUserModel) FindOne(ctx context.Context, id int64) (*User, error) {\n    userIdKey := fmt.Sprintf("%s%v", cacheUserIdPrefix, id)\n    var resp User\n    err := m.QueryRowCtx(ctx, &resp, userIdKey, func(ctx context.Context, conn sqlx.SqlConn, v interface{}) error {\n        query := fmt.Sprintf("select %s from %s where `id` = ? limit 1", userRows, m.table)\n        return conn.QueryRowCtx(ctx, v, query, id)\n    })\n    switch err {\n    case nil:\n        return &resp, nil\n    case sqlc.ErrNotFound:\n        return nil, ErrNotFound\n    default:\n        return nil, err\n    }\n}\n\nfunc (m *defaultUserModel) FindOneByNumber(ctx context.Context, number string) (*User, error) {\n    userNumberKey := fmt.Sprintf("%s%v", cacheUserNumberPrefix, number)\n    var resp User\n    err := m.QueryRowIndexCtx(ctx, &resp, userNumberKey, m.formatPrimary, func(ctx context.Context, conn sqlx.SqlConn, v interface{}) (i interface{}, e error) {\n        query := fmt.Sprintf("select %s from %s where `number` = ? limit 1", userRows, m.table)\n        if err := conn.QueryRowCtx(ctx, &resp, query, number); err != nil {\n            return nil, err\n        }\n        return resp.Id, nil\n    }, m.queryPrimary)\n    switch err {\n    case nil:\n        return &resp, nil\n    case sqlc.ErrNotFound:\n        return nil, ErrNotFound\n    default:\n        return nil, err\n    }\n}\n\nfunc (m *defaultUserModel) Update(ctx context.Context, data *User) error {\n    userIdKey := fmt.Sprintf("%s%v", cacheUserIdPrefix, data.Id)\n    userNumberKey := fmt.Sprintf("%s%v", cacheUserNumberPrefix, data.Number)\n    _, err := m.ExecCtx(ctx, func(ctx context.Context, conn sqlx.SqlConn) (result sql.Result, err error) {\n        query := fmt.Sprintf("update %s set %s where `id` = ?", m.table, userRowsWithPlaceHolder)\n        return conn.ExecCtx(ctx, query, data.Number, data.Name, data.Password, data.Gender, data.Id)\n    }, userIdKey, userNumberKey)\n    return err\n}\n\nfunc (m *defaultUserModel) Delete(ctx context.Context, id int64) error {\n    data, err := m.FindOne(ctx, id)\n    if err != nil {\n        return err\n    }\n\n    userIdKey := fmt.Sprintf("%s%v", cacheUserIdPrefix, id)\n    userNumberKey := fmt.Sprintf("%s%v", cacheUserNumberPrefix, data.Number)\n    _, err = m.ExecCtx(ctx, func(ctx context.Context, conn sqlx.SqlConn) (result sql.Result, err error) {\n        query := fmt.Sprintf("delete from %s where `id` = ?", m.table)\n        return conn.ExecCtx(ctx, query, id)\n    }, userIdKey, userNumberKey)\n    return err\n}\n\nfunc (m *defaultUserModel) formatPrimary(primary interface{}) string {\n    return fmt.Sprintf("%s%v", cacheUserIdPrefix, primary)\n}\n\nfunc (m *defaultUserModel) queryPrimary(ctx context.Context, conn sqlx.SqlConn, v, primary interface{}) error {\n    query := fmt.Sprintf("select %s from %s where `id` = ? limit 1", userRows, m.table)\n    return conn.QueryRowCtx(ctx, v, query, primary)\n}\n\nfunc (m *defaultUserModel) tableName() string {\n    return m.table\n}\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"usermodel.go")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'package model\n\nimport (\n    "github.com/zeromicro/go-zero/core/stores/cache"\n    "github.com/zeromicro/go-zero/core/stores/sqlx"\n)\n\nvar _ UserModel = (*customUserModel)(nil)\n\ntype (\n    // UserModel is an interface to be customized, add more methods here,\n    // and implement the added methods in customUserModel.\n    UserModel interface {\n        userModel\n    }\n\n    customUserModel struct {\n        *defaultUserModel\n    }\n)\n\n// NewUserModel returns a model for the database table.\nfunc NewUserModel(conn sqlx.SqlConn, c cache.CacheConf) UserModel {\n    return &customUserModel{\n        defaultUserModel: newUserModel(conn, c),\n    }\n}\n')),(0,l.kt)("h2",{id:"\u7528\u6cd5"},"\u7528\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ goctl model mysql -h\nNAME:\n   goctl model mysql - generate mysql model\n\nUSAGE:\n   goctl model mysql command [command options] [arguments...]\n\nCOMMANDS:\n   ddl         generate mysql model from ddl\n   datasource  generate model from datasource\n\nOPTIONS:\n   --help, -h  show help\n")),(0,l.kt)("h2",{id:"\u751f\u6210\u89c4\u5219"},"\u751f\u6210\u89c4\u5219"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u9ed8\u8ba4\u89c4\u5219"),(0,l.kt)("p",{parentName:"li"},"\u6211\u4eec\u9ed8\u8ba4\u7528\u6237\u5728\u5efa\u8868\u65f6\u4f1a\u521b\u5efacreateTime\u3001updateTime\u5b57\u6bb5(\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u4e0b\u5212\u7ebf\u547d\u540d\u98ce\u683c)\u4e14\u9ed8\u8ba4\u503c\u5747\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"CURRENT_TIMESTAMP"),"\uff0c\u800cupdateTime\u652f\u6301",(0,l.kt)("inlineCode",{parentName:"p"},"ON UPDATE CURRENT_TIMESTAMP"),"\uff0c\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u751f\u6210",(0,l.kt)("inlineCode",{parentName:"p"},"insert"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"update"),"\u65f6\u4f1a\u88ab\u79fb\u9664\uff0c\u4e0d\u5728\u8d4b\u503c\u8303\u7574\u5185\uff0c\u5f53\u7136\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u90a3\u4e5f\u65e0\u5927\u788d\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"ddl"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ goctl model mysql ddl -h\nNAME:\n   goctl model mysql ddl - generate mysql model from ddl\n  \nUSAGE:\n   goctl model mysql ddl [command options] [arguments...]\n  \nOPTIONS:\n   --src value, -s value         the path or path globbing patterns of the ddl\n   --dir value, -d value         the target dir\n   --style value                 the file naming format, see [https://github.com/zeromicro/go-zero/tree/master/tools/goctl/config/readme.md]\n   --cache, -c                   generate code with cache [optional]\n   --idea                        for idea plugin [optional]\n   --database value, --db value  the name of database [optional]\n   --home value                  the goctl home path of the template, --home and --remote cannot be set at the same time, if they are, --remote has higher priority\n   --remote value                the remote git repo of the template, --home and --remote cannot be set at the same time, if they are, --remote has higher priority\n                                 The git repo directory must be consistent with the https://github.com/zeromicro/go-zero-template directory structure\n   --branch value                the branch of the remote repo, it does work with --remote\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"datasource"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ goctl model mysql datasource -h\nNAME:\n   goctl model mysql datasource - generate model from datasource\n  \nUSAGE:\n   goctl model mysql datasource [command options] [arguments...]\n  \nOPTIONS:\n   --url value              the data source of database,like "root:password@tcp(127.0.0.1:3306)/database"\n   --table value, -t value  the table or table globbing patterns in the database\n   --cache, -c              generate code with cache [optional]\n   --dir value, -d value    the target dir\n   --style value            the file naming format, see [https://github.com/zeromicro/go-zero/tree/master/tools/goctl/config/readme.md]\n   --idea                   for idea plugin [optional]\n   --home value             the goctl home path of the template, --home and --remote cannot be set at the same time, if they are, --remote has higher priority\n   --remote value           the remote git repo of the template, --home and --remote cannot be set at the same time, if they are, --remote has higher priority\n                            The git repo directory must be consistent with the https://github.com/zeromicro/go-zero-template directory structure\n   --branch value           the branch of the remote repo, it does work with --remote\n')))),(0,l.kt)("p",null,"\u751f\u6210\u4ee3\u7801\u4ec5\u57fa\u672c\u7684CURD\u7ed3\u6784\u3002"),(0,l.kt)("h2",{id:"\u7f13\u5b58"},"\u7f13\u5b58"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u7f13\u5b58\u8fd9\u4e00\u5757\u6211\u9009\u62e9\u7528\u4e00\u95ee\u4e00\u7b54\u7684\u5f62\u5f0f\u8fdb\u884c\u7f57\u5217\u3002\u6211\u60f3\u8fd9\u6837\u80fd\u591f\u66f4\u6e05\u6670\u7684\u63cf\u8ff0model\u4e2d\u7f13\u5b58\u7684\u529f\u80fd\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7f13\u5b58\u4f1a\u7f13\u5b58\u54ea\u4e9b\u4fe1\u606f\uff1f"),(0,l.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u4e3b\u952e\u5b57\u6bb5\u7f13\u5b58\uff0c\u4f1a\u7f13\u5b58\u6574\u4e2a\u7ed3\u6784\u4f53\u4fe1\u606f\uff0c\u800c\u5bf9\u4e8e\u5355\u7d22\u5f15\u5b57\u6bb5\uff08\u9664\u5168\u6587\u7d22\u5f15\uff09\u5219\u7f13\u5b58\u4e3b\u952e\u5b57\u6bb5\u503c\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6570\u636e\u6709\u66f4\u65b0\uff08",(0,l.kt)("inlineCode",{parentName:"p"},"update"),"\uff09\u64cd\u4f5c\u4f1a\u6e05\u7a7a\u7f13\u5b58\u5417\uff1f"),(0,l.kt)("p",{parentName:"li"},"\u4f1a\uff0c\u4f46\u4ec5\u6e05\u7a7a\u4e3b\u952e\u7f13\u5b58\u7684\u4fe1\u606f\uff0cwhy\uff1f\u8fd9\u91cc\u5c31\u4e0d\u505a\u8be6\u7ec6\u8d58\u8ff0\u4e86\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u4e0d\u6309\u7167\u5355\u7d22\u5f15\u5b57\u6bb5\u751f\u6210",(0,l.kt)("inlineCode",{parentName:"p"},"updateByXxx"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"deleteByXxx"),"\u7684\u4ee3\u7801\uff1f"),(0,l.kt)("p",{parentName:"li"},"\u7406\u8bba\u4e0a\u662f\u6ca1\u4efb\u4f55\u95ee\u9898\uff0c\u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\uff0c\u5bf9\u4e8emodel\u5c42\u7684\u6570\u636e\u64cd\u4f5c\u5747\u662f\u4ee5\u6574\u4e2a\u7ed3\u6784\u4f53\u4e3a\u5355\u4f4d\uff0c\u5305\u62ec\u67e5\u8be2\uff0c\u6211\u4e0d\u5efa\u8bae\u53ea\u67e5\u8be2\u67d0\u90e8\u5206\u5b57\u6bb5\uff08\u4e0d\u53cd\u5bf9\uff09\uff0c\u5426\u5219\u6211\u4eec\u7684\u7f13\u5b58\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u4e0d\u652f\u6301",(0,l.kt)("inlineCode",{parentName:"p"},"findPageLimit"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"findAll"),"\u8fd9\u79cd\u6a21\u5f0f\u4ee3\u7801\u751f\u6210\uff1f"),(0,l.kt)("p",{parentName:"li"},"\u76ee\u524d\uff0c\u6211\u8ba4\u4e3a\u9664\u4e86\u57fa\u672c\u7684CURD\u5916\uff0c\u5176\u4ed6\u7684\u4ee3\u7801\u5747\u5c5e\u4e8e",(0,l.kt)("i",null,"\u4e1a\u52a1\u578b"),"\u4ee3\u7801\uff0c\u8fd9\u4e2a\u6211\u89c9\u5f97\u5f00\u53d1\u4eba\u5458\u6839\u636e\u4e1a\u52a1\u9700\u8981\u8fdb\u884c\u7f16\u5199\u66f4\u597d\u3002"))),(0,l.kt)("h1",{id:"\u7c7b\u578b\u8f6c\u6362\u89c4\u5219"},"\u7c7b\u578b\u8f6c\u6362\u89c4\u5219"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"mysql dataType"),(0,l.kt)("th",{parentName:"tr",align:null},"golang dataType"),(0,l.kt)("th",{parentName:"tr",align:null},"golang dataType(if null&&default null)"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tinyint"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"smallint"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mediumint"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bigint"),(0,l.kt)("td",{parentName:"tr",align:null},"int64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"float64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullFloat64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"double"),(0,l.kt)("td",{parentName:"tr",align:null},"float64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullFloat64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"decimal"),(0,l.kt)("td",{parentName:"tr",align:null},"float64"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullFloat64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},"time.Time"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullTime")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"datetime"),(0,l.kt)("td",{parentName:"tr",align:null},"time.Time"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullTime")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},"time.Time"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullTime")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"time"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"year"),(0,l.kt)("td",{parentName:"tr",align:null},"time.Time"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullInt64")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"char"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"varchar"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"binary"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"varbinary"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tinytext"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mediumtext"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"longtext"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"enum"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"set"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"json"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"sql.NullString")))))}s.isMDXComponent=!0}}]);